before:
  hooks:
    - go mod tidy
    - go mod download
builds:
  - id: ansible-operator
    main: ./cmd/ansible-operator/
    binary: ansible-operator
    asmflags: "{{ .Env.GO_BUILD_ASMFLAGS }}"
    gcflags: "{{ .Env.GO_BUILD_GCFLAGS }}"
    ldflags: "{{ .Env.GO_BUILD_LDFLAGS }}"
    mod_timestamp: "{{ .CommitTimestamp }}"
    goos:
    - linux
    goarch:
    - amd64
    - arm64
    - ppc64le
    - s390x
  - id: ansible-cli
    main: ./cmd/ansible-cli/
    binary: ansible-cli
    asmflags: "{{ .Env.GO_BUILD_ASMFLAGS }}"
    gcflags: "{{ .Env.GO_BUILD_GCFLAGS }}"
    ldflags: "{{ .Env.GO_BUILD_LDFLAGS }}"
    mod_timestamp: "{{ .CommitTimestamp }}"
    goos:
    - linux
    goarch:
    - amd64
    - arm64
    - ppc64le
    - s390x
dockers:
- image_templates:
  - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-amd64"
  dockerfile: images/ansible-operator/Dockerfile
  goos: linux
  goarch: amd64
  use: buildx
  build_flag_templates:
    - "--platform=linux/amd64"
    - "--cache-from"
    - "type=gha,scope=amd64,token={{ .Env.ACTIONS_RUNTIME_TOKEN }},url={{ .Env.ACTIONS_CACHE_URL }}"
    - "--builder={{ .Env.BUILDX_BUILDER }}"
  extra_files:
    - "images/ansible-operator/Pipfile"
    - "images/ansible-operator/Pipfile.lock"
- image_templates:
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-arm64"
  dockerfile: images/ansible-operator/Dockerfile
  goos: linux
  goarch: arm64
  use: buildx
  build_flag_templates:
    - "--platform=linux/arm64"
    - "--cache-from"
    - "type=gha,scope=arm64,token={{ .Env.ACTIONS_RUNTIME_TOKEN }},url={{ .Env.ACTIONS_CACHE_URL }}"
    - "--builder={{ .Env.BUILDX_BUILDER }}"
  extra_files:
    - "images/ansible-operator/Pipfile"
    - "images/ansible-operator/Pipfile.lock"
- image_templates:
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-ppc64le"
  dockerfile: images/ansible-operator/Dockerfile
  goos: linux
  goarch: ppc64le
  use: buildx
  build_flag_templates:
    - "--platform=linux/ppc64le"
    - "--cache-from"
    - "type=gha,scope=ppc64le,token={{ .Env.ACTIONS_RUNTIME_TOKEN }},url={{ .Env.ACTIONS_CACHE_URL }}"
    - "--builder={{ .Env.BUILDX_BUILDER }}"
  extra_files:
    - "images/ansible-operator/Pipfile"
    - "images/ansible-operator/Pipfile.lock"
- image_templates:
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-s390x"
  dockerfile: images/ansible-operator/Dockerfile
  goos: linux
  goarch: s390x
  use: buildx
  build_flag_templates:
    - "--platform=linux/s390x"
    - "--cache-from"
    - "type=gha,scope=s390x,token={{ .Env.ACTIONS_RUNTIME_TOKEN }},url={{ .Env.ACTIONS_CACHE_URL }}"
    - "--builder={{ .Env.BUILDX_BUILDER }}"
  extra_files:
    - "images/ansible-operator/Pipfile"
    - "images/ansible-operator/Pipfile.lock"
docker_manifests:
- name_template: "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}"
  image_templates:
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-amd64"
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-arm64"
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-ppc64le"
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-s390x"
archives:
  - format: binary
    name_template: "{{ .Binary }}_{{ .Os }}_{{ .Arch }}"
changelog:
  use: github-native
  skip: '{{ ne .Env.ENABLE_RELEASE_PIPELINE "true" }}'
release:
  disable: '{{ ne .Env.ENABLE_RELEASE_PIPELINE "true" }}'
